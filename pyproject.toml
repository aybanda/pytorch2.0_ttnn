[build-system]
requires = ["setuptools>=61.0", "setuptools-scm>=7.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "torch-ttnn"
dynamic = ["version", "dependencies"]
description = "PyTorch 2.0 TTNN Compiler"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
authors = [
    {name = "Tenstorrent", email = "info@tenstorrent.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX :: Ubuntu",
]
keywords = ["pytorch", "ttnn", "tenstorrent", "compiler", "machine-learning", "deep-learning"]

[project.optional-dependencies]
ttnn = [
    "ttnn @ https://github.com/tenstorrent/tt-metal/releases/download/v0.59.0-rc56/ttnn-0.59.0rc56-cp310-cp310-manylinux_2_34_x86_64.whl ; python_version=='3.10' and platform_system=='Linux' and platform_machine=='x86_64'"
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.3",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["torch_ttnn*"]

[tool.setuptools_scm]
version_scheme = "python-simplified-semver"
local_scheme = "node-and-date"
write_to = "torch_ttnn/_version.py"
